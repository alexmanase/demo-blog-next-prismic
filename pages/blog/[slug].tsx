import type { NextPage } from "next";
import Head from "next/head";
import React from "react";
import { Client } from "../../prismic/prismic";

import { RichText } from "prismic-reactjs";
import { htmlSerializer } from "../../prismic/htmlSerializer";

// const linkResolver = (doc: any) => {
//   // Pretty URLs for known types
//   if (doc.type === "blog") return "/post/" + doc.uid;
//   if (doc.type === "page") return "/" + doc.uid;
//   // Fallback for other types, in case new custom types get created
//   return "/doc/" + doc.id;
// };

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: true,
  };
}

export async function getStaticProps(context: any) {
  const document = await Client.getByUID("blog-post", context.params.slug, {});
  return {
    props: {
      document,
    },
  };
}

const Home: NextPage = ({ document }: any) => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>{document?.data.title[0].text}</h1>

        {document && (
          <RichText
            render={document.data.body[0].primary.text}
            htmlSerializer={htmlSerializer}
          />
        )}
      </main>
    </div>
  );
};

export default Home;
