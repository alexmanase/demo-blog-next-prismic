import type { NextPage } from "next";
import Head from "next/head";
import React from "react";
import { Client } from "../../prismic/prismic";
import Prismic from "@prismicio/client";

import { RichText } from "prismic-reactjs";
import { htmlSerializer } from "../../prismic/htmlSerializer";
import BlogPostLayout from "../../layouts/BlogPostLayout";

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: true,
  };
}

export async function getStaticProps(context: any) {
  const document = await Client.getByUID("blog-post", context.params.slug, {});
  const { results } = await Client.query(
    Prismic.Predicates.at("document.type", "blog-post")
  );
  return {
    props: {
      document,
      blogPosts: results,
    },
  };
}

const Home: NextPage = ({ document, blogPosts }: any) => {
  return (
    <div>
      <Head>
        <title>{document?.data.title[0].text}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <BlogPostLayout posts={blogPosts}>
        <main>
          <div className="prose prose-img:rounded-xl max-w-none">
            {/* eslint-disable-next-line @next/next/no-img-element */}
            <img
              src={document?.data.image.url}
              alt={document?.data.image.alt}
            />
            <h1>{document?.data.title[0].text}</h1>

            {document && (
              <RichText
                render={document.data.body[0].primary.text}
                htmlSerializer={htmlSerializer}
              />
            )}
          </div>
        </main>
      </BlogPostLayout>
    </div>
  );
};

export default Home;
